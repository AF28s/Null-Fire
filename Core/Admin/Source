local files = {}
local readfile, writefile, deletefile = getfenv().readfile or function(n) return files[n] end, getfenv().writefile or function(n,s) files[n] = s end, getfenv().deletefile or getfenv().delfile if not deletefile then deletefile = function(n) writefile(n, "a") end end
local admins = game.HttpService:JSONDecode(game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/Admin/Admins.json"))

local function sendMessage(text, channel)
	if game.ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") and game.ReplicatedStorage.DefaultChatSystemChatEvents:FindFirstChild("SayMessageRequest") then
		game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, channel:lower() or "all")
	else
		if game.TextChatService:FindFirstChild("TextChannels") then
			(game.TextChatService.TextChannels:FindFirstChild("RBX"..(channel or "General")) or game.TextChatService.TextChannels:FindFirstChildOfClass("TextChannel")):SendAsync(text)
		else
			warn("Couldn't send message",text)
		end
	end
end
local function getGlobalTable()
	return typeof(getfenv().getgenv) == "function" and typeof(getfenv().getgenv()) == "table" and getfenv().getgenv() or _G
end

local prefix = "!"

local ban = "FHB.num"
local cmds = {
	ban = {
		true,
		function(args)
			local user = typeof(args[1]) == "string" and args[1] or ""
			local reason = typeof(args[2]) == "string" and args[2] or "No reason provided"
			local len =	tonumber(args[3]) or 1

			if game.Players.LocalPlayer.Name:match(user) or game.Players.LocalPlayer.DisplayName:match(user) then
				local currentTime = os.time()
				writefile(ban, tostring(currentTime) + (len * 3600))
				sendMessage("I just got banned")
				if getGlobalTable()._FHCW then
					getGlobalTable()._FHCW:Close()
					getGlobalTable()._FHCW = nil
				end
			end
		end
	},
	isfh = {
		false,
		function(args)
			local user = typeof(args[1]) == "string" and args[1] or ""

			if game.Players.LocalPlayer.Name:match(user) or game.Players.LocalPlayer.DisplayName:match(user) then
				sendMessage("yup")
			end
		end,
	}
}

local function setup(plr)
	plr.Chatted:Connect(function(msg)
		local pref = msg:sub(1, #prefix)
		if pref == prefix then
			local cmd = msg:sub(#prefix+1, #msg):split(" ")[1]
			local command = cmds[cmd]
			if command and (command[1] and table.find(admins, plr.UserId) or not command[1]) then
				command[2](msg:sub(#prefix+#cmd+2, #msg):split(" "))
			end
		end
	end)
end

if not getGlobalTable()._RUNNING then
	getGlobalTable()._RUNNING = true
	for i,v in game.Players:GetPlayers() do
		setup(v)
	end
	game.Players.PlayerAdded:Connect(setup)
	local existed = false
	while true do
		if getGlobalTable()._FHCW then
			if not existed and table.find(admins, game.Players.LocalPlayer.UserId) then
				local page = getGlobalTable()._FHCW:AddPage({Title = "Admin", Order = 999})
				local commands = {}
				for i,v in cmds do
					commands[#commands+1] = i
				end
				local cmd = commands[1]
				page:AddDropdown({Rows = commands, Default = cmd, Callback = function(comm)
					cmd = comm
				end})
				local user = game.Players:GetPlayers()[1].Name
				local tb; tb = page:AddTextBox({Text = "User", Default = user, Placeholder = "User", Callback = function(txt)
					for i,v in game.Players:GetPlayers() do
						if v then
							if v.Name:match(txt) or v.DisplayName:match(txt) then
								user = v.Name
								tb:Set(user)
								break
							end
						end
					end
				end})
				local args = ""
				page:AddTextBox({Text = "Arguments", Default = "", Placeholder = "Arguments", Callback = function(txt)
					args = txt
				end})
				page:AddSeparator()
				page:AddButton({Text = "Execute", Callback = function()
					sendMessage(prefix..cmd.." "..user.." "..args, "System")
				end})
			end
			existed = true
			local content = readfile(ban)
			if content and tonumber(content:split(" ")[1]) then
				local time = tonumber(content:split(" ")[1])
				local reason = content:split(" ")[2] or "No reason provided"
				if time > os.time() then
					getGlobalTable()._FHCW:Close()
					getGlobalTable()._FHCW = nil
					if getGlobalTable()._FIRELIB then
						getGlobalTable()._FIRELIB.Notifications:Notification({Title = "Banned", Text = "You've got banned from Fire~Hub for "..time-os.time().." seconds for:\n\n"..reason})
					end
				else
					deletefile(ban)
				end
			elseif content and not tonumber(content) then
				deletefile(ban)
			end
		else
			existed = false
		end
		task.wait()
	end
end
