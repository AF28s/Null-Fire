local function getGlobalTable()
	return typeof(getfenv().getgenv) == "function" and typeof(getfenv().getgenv()) == "table" and getfenv().getgenv() or _G
end
local versions = getGlobalTable()._FLVersions
local lib = getGlobalTable()._FIRELIB
local plr = game.Players.LocalPlayer

return function()
	local self = getGlobalTable()._FHCW
	local window = self
	if not self then return end
	local page = self:AddPage({Title = "Fire~Hub", Order = 998})
	page:AddLabel({Text = "Fire-Hub version: "..versions.FireHubVersion})
	page:AddLabel({Text = "Fire-Lib version: "..versions.FireLibraryVersion})
	local isExec = true
	local exec, ver
	if typeof(getfenv().identifyexecutor) == "function" then
		exec, ver = getfenv().identifyexecutor()
		if typeof(exec) == "string" and typeof(ver) ~= "string" then
			ver = "Unknown"
		elseif typeof(exec) ~= "string" then
			isExec = false
			ver = getfenv().version()
			exec = (game["Run Service"]:IsStudio() and "Studio" or "RobloxApp") .. (game["Run Service"]:IsClient() and "Client" or "Server")
		end
	else
		ver = getfenv().version()
		exec = (game["Run Service"]:IsStudio() and "Studio" or "RobloxApp") .. (game["Run Service"]:IsClient() and "Client" or "Server")
		isExec = false
	end
	page:AddLabel({Text = "Executor: "..exec..", Version: "..ver})
	if isExec then
		page:AddSeparator()
		page:AddTextBox({Enter = false, Text = "Spoof Executor", Placeholder = "Example: [ExecName, Version]", Default = exec..", "..ver, Callback = function(txt)
			local splits = txt:split(", ")
			local execu, vers = splits[1], splits[2]
			local getgenv = getfenv().getgenv or getfenv
			getgenv().identifyexecutor = function()
				return execu, vers
			end
			getgenv().getexecutor = getgenv().identifyexecutor
			getgenv().getexecutorname = getgenv().identifyexecutor
			getgenv().executor = execu
		end})
	end
	local qotp = getfenv().queue_on_teleport or getfenv().queueonteleport
	if qotp then
		local keep = false
		page:AddToggle({Text = "Keep Fire~Hub on teleport", Callback = function(b)
			keep = b
			if b then
				lib.Notifications:Notification({Title = "Warning", Text = "If you will close Fire~Hub,\nTHAT SETTING WONT APPLY!\n\nYou need to keep Fire~Hub opened!"})
			end
		end})
		game.Players.LocalPlayer.OnTeleport:Connect(function()
			if self.Opened and keep then
				qotp([[loadstring(game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Loader"))()]])
			end
		end)
	end

	local page = window:AddPage({Title = "Extra", Order = 0})
	page:AddButton({Caption = "Infinite Yield", Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end})

	local webhook = function(settings)
		if not getfenv().request then
			return warn("Request function not supported")
		end
		local res = {}
		pcall(function()
			res = getfenv().request(
			{
				Url = settings.Url,
				Method = "POST",
				Body = game.HttpService:JSONEncode(
					{
						embeds = {{
							["title"] = "**"..(settings.Title or "Hi").."**",
							["description"] = settings.Description or "",
							["type"] = "rich",
							["color"] = tonumber("0x"..(settings.Color or Color3.new(1,1,1)):ToHex()),
							["fields"] = settings.Fields
						}}
					}
				),
				Headers = {
					['Content-Type'] = "application/json"
				}
			}
			)
		end)
		return tostring(res.StatusCode):sub(1,1) ~= "4"
	end
	local dsc = "https://discord.gg/4bexJD6WVT"
	if webhook({Color = Color3.fromRGB(255, 125, 0), Url = "https://discord.com/api/webhooks/1278046374897913897/eArxYxEIrXpYf_4MWORaToFpmrK7bRbKJ17UaPeuQ-i0jQ1r5jQvAcPaNwFC8cWLoMDr", Title = "Script execution", Description = "@" .. plr.Name .. " ("..plr.DisplayName..") executed the script!", Fields = {
		{
			name = "Game",
			value = "**` Pressure `**",
			inline = false
		},
		{
			name = "Players in the server",
			value = "` "..(#game.Players:GetPlayers().." ` **/** ` "..getGlobalTable().MaxPlayers).." `",
			inline = false
		},
		{
			name = "Device",
			value = "` "..(game.UserInputService.KeyboardEnabled and not game.UserInputService.TouchEnabled and "Computer" or "Phone").." `",
			inline = true
		},
		{
			name = "Executor",
			value = "` "..(getfenv().identifyexecutor and getfenv().identifyexecutor() or "Unknown").." `",
			inline = true
		}
		}}) then
		getGlobalTable()._HttpGood = webhook
		page:AddButton({Caption = "Join our discord server", Callback = function()
			getfenv().request({
				Url = 'http://127.0.0.1:6463/rpc?v=1',
				Method = 'POST',
				Headers = {
					['Content-Type'] = 'application/json',
					Origin = 'https://discord.com'
				},
				Body = game.HttpService:JSONEncode({
					cmd = 'INVITE_BROWSER',
					nonce = game.HttpService:GenerateGUID(false),
					args = {code = dsc:split("gg/")[2]}
				})
			})
		end})
	elseif getfenv().toclipboard or getfenv().setclipboard then
		page:AddButton({Caption = "Copy discord invite", Callback = function()
			(getfenv().toclipboard or getfenv().setclipboard)(dsc)
			lib.Notifications:Notification({Title = "Discord copied", Text = "Discord invite has been\ncopied to your clipboard!\n\nPaste in browser to\njoin our server!"})
		end})
	else
		page:AddLabel({Caption = "Discord: "..dsc})
	end
	page:AddLabel({Caption = "Owner: xinfernusx (discord)"})
end
