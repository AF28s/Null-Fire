local function getGlobalTable()
    return typeof(getgenv) == "function" and typeof(getgenv()) == "table" and getgenv() or _G
end

local httpGet = function(...)
    local res
    local args = table.pack(...)
    local function try(obj,name)
        if res then return end
        pcall(function()
            res = res or obj[name](obj, unpack(args))
        end)
    end

    try(game,"HttpGet")
    try(game,"HttpGetAsync")

    try(game:GetService("HttpService"),"GetAsync")

    return res
end

local working = httpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/Version"):split("\n")[3] == "1"
if not working then return warn("Fire~Hub is not working right now.") end
if getGlobalTable().FireHubLoaded then return warn("Fire~Hub is already loaded!") end

local supported = httpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/SupportedGames.json")
local function message(text)
    task.spawn(function()
        local msg = Instance.new("Message", workspace)
        msg.Text = text
        task.wait(5)
        msg:Destroy()
    end)
end
for i,v in game.HttpService:JSONDecode(supported) do
    local sup = false
    for _,val in pairs(v) do
        if val == game.PlaceId then
            sup = true
        end
    end

    if sup then
        getGlobalTable().FireHubLoaded = true
        message("Loading script for "..i.."...\nPlease expect lags while loading it!")
        task.wait(1)
        return loadstring(httpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/Scripts/"..game.HttpService:UrlEncode(i).."/Loader.lua"))()
    end
end
message("This game is not supported!")
