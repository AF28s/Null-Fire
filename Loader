local function getGlobalTable()
    return typeof(getgenv) == "function" and typeof(getgenv()) == "table" and getgenv() or _G
end

local lib
local s,e = pcall(function()
    lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/UI-Library"))()
end)
if not lib or not s then
    local msg = Instance.new("Message", workspace)
    msg.Text = "Fire~Library failed to initilize!\nSend this to developer (@xinfernusx on discord):\n\n"..(not s and e or "Library instance is nil!")
    task.wait(5)
    return msg:Destroy()
end

local function message(text)
    lib.Notifications:Notification({Text = text, Title = "Fire~Hub Initilization"})
end

message("Loading Fire~Hub...")

local working = game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/Version"):split("\n")[3] == "1"
if not working then return message("Fire~Hub is not working right now.") end
if getGlobalTable().FireHubLoaded then return message("Fire~Hub is already loaded!") end

local supported = game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/SupportedGames.json")
for i,v in game.HttpService:JSONDecode(supported) do
    local sup = false
    for _,val in pairs(v) do
        if val == game.PlaceId then
            sup = true
        end
    end

    if sup then
        getGlobalTable().FireHubLoaded = true
        message("Loading script for "..i.."...\nPlease expect lags while loading it!")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/Admin/Source"))()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Fire-Hub/main/Core/Scripts/"..game.HttpService:UrlEncode(i).."/Loader.lua"))()
    end
end
message("This game is not supported!")
